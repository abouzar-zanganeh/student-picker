# **🗺️ گزارش کامل مسیر پروژه: دستیار هوشمند معلم** تا تاریخ ۱۴۰۴/۴/۰۷

این سند، تاریخچه کامل و روایی پروژه "دستیار هوشمند معلم" است که با همفکری و همکاری شما، از یک ایده ساده به یک وب‌اپلیکیشن هوشمند و کاربردی تبدیل شد.

### **فاز ۱: جرقه‌ی اولیه و تولد ایده (🎯 The Core Idea)**

* **مشکل اصلی:** شما به عنوان یک معلم حرفه‌ای، به دنبال راهی برای کاهش فشار ذهنی انتخاب نفر بعدی در کلاس و همچنین رعایت عدالت آموزشی بودید.  
* **هدف اولیه:** ساخت یک ابزار سریع و هوشمند به عنوان مکمل دفتر نمره.  
* **ایده کلیدی:** ما به سرعت به این نتیجه رسیدیم که انتخاب نباید کاملاً شانسی باشد. ما مفهوم **"تصادفیِ جهت‌دار" (Weighted Randomness)** را طراحی کردیم تا دو هدف اصلی را تامین کند:  
  1. **غافلگیری:** دانش‌آموزان نتوانند نفر بعدی را حدس بزنند.  
  2. **عدالت:** در بلندمدت، فرصت پرسش به همه به طور یکسان برسد.

### **فاز ۲: ساخت نمونه اولیه و بازطراحی ساختار (🚀 MVP & Refactoring)**

* **تکنولوژی:** تصمیم گرفتیم یک **وب‌اپلیکیشن** با **HTML, CSS و JavaScript** بسازیم تا هم روی لپ‌تاپ و هم روی موبایل به راحتی کار کند.  
* **اولین قابلیت‌ها:**  
  * امکان ساخت کلاس‌های مختلف.  
  * افزودن دستی دانش‌آموزان.  
  * دکمه اصلی **«انتخاب نفر بعدی\!»** با الگوریتم اولیه.  
  * استفاده از حافظه مرورگر (`localStorage`) برای ذخیره دائمی اطلاعات.  
* **بازطراحی ساختاری:** در یک گام مهم، کدهای پروژه را از یک فایل واحد به سه فایل مجزای `index.html`, `style.css`, و `script.js` تفکیک کردیم تا خوانایی، مدیریت و نگهداری آن در آینده ساده‌تر شود.

### **فاز ۳: هوشمندسازی و تکامل الگوریتم انتخاب (🧠 Algorithm Refinement)**

اینجا بود که با مشاهدات دقیق شما، الگوریتم اصلی برنامه به شکل چشمگیری هوشمندتر شد:

* **چالش ۱:** انتخاب یک دانش‌آموز دو بار پشت سر هم.  
  * **راه‌حل:** با افزودن یک "حافظه کوتاه‌مدت" (`lastWinner`)، جلوی این اتفاق را گرفتیم.  
* **چالش ۲ (نقطه عطف پروژه):** ایجاد "شکاف" زیاد بین تعداد انتخاب‌های دانش‌آموزان.  
  * **راه‌حل:** با همفکری، از یک الگوریتم ساده فراتر رفته و به یک **"الگوریتم شکاف تکاملی"** رسیدیم. برنامه حالا بر اساس سطح مشارکت کلاس (تعداد `count` پیشرفته‌ترین دانش‌آموز)، میزان سخت‌گیری خود را تغییر می‌دهد.

### **فاز ۴: بهبود تجربه کاربری و گردش کار (🎨 UX & Workflow)**

در این مرحله، روی جزئیاتی کار کردیم که برنامه را کاربرپسندتر کرد:

* **ورود هوشمند اسامی:**  
  * **چالش ۱:** جلوگیری از ورود اسامی تکراری یا با غلط املایی.  
  * **راه‌حل:** پیاده‌سازی الگوریتم تشخیص شباهت **Levenshtein**.  
  * **چالش ۲:** مشکل "سارا تقی پور" در مقابل "ساراتقی‌پور".  
  * **راه‌حل:** با **نرمال‌سازی** اسامی (حذف فاصله‌ها) قبل از مقایسه، این مشکل را هم حل کردیم.  
* **افزایش سرعت:** اضافه کردن قابلیت حذف سریع با **`Ctrl+Click`**.  
* **بهبود بصری:**  
  * انتقال **بخش انتخابگر به بالای صفحه** برای اولویت‌دهی.  
  * استفاده از فونت **"وزیرمتن"** و **اعداد فارسی** برای زیبایی و خوانایی.  
  * تبدیل بخش مدیریت دانش‌آموزان به یک **کشوی جمع‌شونده (Accordion)** برای خلوت کردن صفحه.

### **فاز ۵: مدیریت پیشرفته داده‌ها و ساختار (📂 Advanced Features)**

* **ورود دسته‌ای:** اضافه کردن قابلیت بسیار مهم **ورود لیست دانش‌آموزان** از دو طریق:  
  * **فایل CSV**  
  * **Paste کردن مستقیم** از کلیپ‌بورد. و طراحی یک صفحه پیش‌نمایش برای هر دو.  
* **بازطراحی ساختار (یک بهبود کلیدی):**  
  * **مشکل:** صفحه انتخاب دانش‌آموز شلوغ شده بود.  
  * **راه‌حل:** "تنظیمات" را از "استفاده روزمره" جدا کردیم. یک **صفحه تنظیمات (⚙️)** جداگانه برای هر کلاس ایجاد کردیم و تمام بخش مدیریت لیست را به آنجا منتقل کردیم.  
* **حافظه برای هر کلاس:**  
  * **مشکل:** آخرین دانش‌آموز انتخاب شده از یک کلاس، در کلاس دیگر هم نمایش داده می‌شد.  
  * **راه‌حل:** با تغییر ساختار داده از "لیست" به "آبجکت"، قابلیت ذخیره **آخرین نفر انتخاب شده برای هر کلاس به صورت مجزا** را پیاده‌سازی کردیم.

### **فاز ۶: قابلیت حیاتی ثبت وضعیت و واگرد (↩️ Status & Undo)**

* **ثبت وضعیت دانش‌آموز:**  
  * **ایده:** افزودن گزینه‌های **«غایب»** و **«مشکل»** بعد از انتخاب هر دانش‌آموز.  
  * **منطق نهایی:** شمارنده اصلی (`count`) به عنوان "تعداد فرصت‌های داده شده" عمل می‌کند و دو شمارنده جدید (`absenceCount` و `problemCount`) برای ثبت وضعیت عدم مشارکت اضافه شدند.  
  * **بازخورد بصری:** دکمه‌های وضعیت به صورت "Toggle" (قابل فعال و غیرفعال شدن) و با ظاهر "فشرده شده" طراحی شدند.  
* **قابلیت واگرد (Undo):**  
  * **ایده:** جایگزینی پیغام‌های تأیید قدیمی (`confirm`) با یک سیستم **واگرد موقت و مدرن** برای عملیات حذف.  
  * **چالش:** با حذف‌های پیاپی، فقط آخرین مورد برمی‌گشت.  
  * **راه‌حل نهایی:** پیاده‌سازی یک سیستم **"واگرد دسته‌ای"** هوشمند که با یک کلیک، تمام حذفیات اخیر را برمی‌گرداند.

این خلاصه، مسیر تکاملی پروژه ما از یک ایده ساده تا یک ابزار هوشمند، خوش‌ساخت و کاملاً سفارشی‌شده بر اساس نیازهای واقعی شما در کلاس درس را نشان می‌دهد.
